apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile 'com.android.support:support-v4:20.+'
    compile 'com.android.support:appcompat-v7:20.+'
    compile 'com.squareup.picasso:picasso:2.1.1'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    compile 'it.sephiroth.android.library.imagezoom:library:+'
    compile 'com.github.keithyokoma:CompoundContainers:1.0.0@aar'
    compile 'jp.co.nohana:Amalgam:0.3.2@aar'
    compile 'jp.mixi:AndroidDeviceCompatibility:1.0.0@aar'
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

tasks.withType(Javadoc) {
    // workaround javadoc build error
    // can't resolve dependencies
    failOnError=false
}

// android.libraryVariants.findAll { variant -> def name = variant.buildType.name
//     // Only attach a jar for non-debug build types.
//     if (!name.equals(com.android.builder.BuilderConstants.DEBUG)) {
//         def task = project.tasks.create "jar${name.capitalize()}", Jar
//         task.dependsOn variant.javaCompile
//         task.from variant.javaCompile.destinationDir
//         artifacts.add('archives', task);
//     }
// }

// apply from: 'https://raw.githubusercontent.com/googolmo/gradle-mvn-push/new_javadoc_source_task/gradle-mvn-push.gradle'
apply from: 'https://raw.githubusercontent.com/jpardogo/gradle-mvn-push/master/gradle-mvn-push.gradle'
//
// afterEvaluate {
//     androidJavadocs.classpath += project.files(android.plugin.getRuntimeJarList().join(File.pathSeparator))
//     androidJavadocs.classpath += project.files(android.libraryVariants.javaCompile.classpath.files);
// }
